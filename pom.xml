<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.electrum</groupId>
  <artifactId>billpay-service-interface</artifactId>
  <packaging>jar</packaging>
  <version>1.0.0</version>
  <name>Bill Payments Service Interface</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <joda-time-version>2.9.4</joda-time-version>
    <swagger-version>1.5.9</swagger-version>
    <jetty-version>9.2.14.v20151106</jetty-version>
    <jersey-version>2.22.1</jersey-version>
    <hibernate-validator-version>5.2.2.Final</hibernate-validator-version>
    <el-version>2.2.4</el-version>
    <swagger-maven-plugin-version>3.1.3</swagger-maven-plugin-version>
    <slf4j-version>1.7.5</slf4j-version>
    <logback-version>1.0.13</logback-version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>${joda-time-version}</version>
    </dependency>
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-jersey2-jaxrs</artifactId>
      <version>${swagger-version}</version>
    </dependency>
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-hibernate-validations</artifactId>
      <version>${swagger-version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty-version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-server</artifactId>
      <version>${jersey-version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-common</artifactId>
      <version>${jersey-version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet</artifactId>
      <version>${jersey-version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-client</artifactId>
      <version>${jersey-version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
      <version>${jersey-version}</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>${hibernate-validator-version}</version>
    </dependency>
    <dependency>
      <groupId>javax.el</groupId>
      <artifactId>javax.el-api</artifactId>
      <version>${el-version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.web</groupId>
      <artifactId>javax.el</artifactId>
      <version>${el-version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j-version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback-version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.17</version>
        <configuration>
          <suiteXmlFiles>
            <suiteXmlFile>src/test/resources/testng.xml</suiteXmlFile>
          </suiteXmlFiles>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.9</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.kongchen</groupId>
        <artifactId>swagger-maven-plugin</artifactId>
        <version>${swagger-maven-plugin-version}</version>
        <configuration>
          <apiSources>
            <apiSource>
              <springmvc>false</springmvc>
              <locations>io.electrum.billpay.api</locations>
              <schemes>https</schemes>
              <host>sandbox.electrum.io</host>
              <basePath>/billpay/v1</basePath>
              <info>
                <title>Bill Payments Service Interface</title>
                <version>${project.version}</version>
                <description>The Electrum Bill Payments Service describes an interface for performing bill payments
                  transactions. These transactions require a reference number which uniquely identifies the bill
                  processor, bill issuer, as well as the customer account, and is typically printed on a customer
                  invoice. The customer then makes use of this reference number to make a payment towards the
                  corresponding bill.
                </description>
                <contact>
                  <email>support@electrum.co.za</email>
                  <name>Electrum Support</name>
                  <url>http://io.electrum</url>
                </contact>
                <license>
                  <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
                  <name>Apache 2.0</name>
                </license>
              </info>
              <securityDefinitions>
                <securityDefinition>
                  <name>httpBasic</name>
                  <type>basic</type>
                  <description>All requests require HTTP basic authentication, where user name equals the value used in
                    MessageId.institutionId and password has been agreed with Electrum.
                  </description>
                </securityDefinition>
              </securityDefinitions>
              <templatePath>${basedir}/src/main/resources/docs/swagger/templates/markdown.hbs</templatePath>
              <outputPath>${project.build.directory}/swagger/swagger.md</outputPath>
              <outputFormats>yaml</outputFormats>
              <swaggerDirectory>${project.build.directory}/swagger</swaggerDirectory>
            </apiSource>
          </apiSources>
        </configuration>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!--
            <plugin>
              <groupId>io.github.swagger2markup</groupId>
              <artifactId>swagger2markup-maven-plugin</artifactId>
              <version>1.0.0</version>
              <dependencies>
                <dependency>
                  <groupId>io.github.swagger2markup</groupId>
                  <artifactId>swagger2markup-import-files-ext</artifactId>
                  <version>1.0.0</version>
                </dependency>
              </dependencies>
              <configuration>
                <swaggerInput>${project.basedir}/src/docs/swagger/swagger.yaml</swaggerInput>
                <outputDir>${project.build.directory}/asciidoc</outputDir>
                <config>
                  <swagger2markup.markupLanguage>MARKDOWN</swagger2markup.markupLanguage>
                  <swagger2markup.extensions.dynamicOverview.contentPath>
                    ${project.basedir}/src/docs/asciidoc/extensions/overview
                  </swagger2markup.extensions.dynamicOverview.contentPath>
                  <swagger2markup.extensions.dynamicDefinitions.contentPath>
                    ${project.basedir}/src/docs/asciidoc/extensions/definitions
                  </swagger2markup.extensions.dynamicDefinitions.contentPath>
                  <swagger2markup.extensions.dynamicPaths.contentPath>${project.basedir}/src/docs/asciidoc/extensions/paths
                  </swagger2markup.extensions.dynamicPaths.contentPath>
                  <swagger2markup.extensions.dynamicSecurity.contentPath>
                    ${project.basedir}src/docs/asciidoc/extensions/security/
                  </swagger2markup.extensions.dynamicSecurity.contentPath>
                </config>
              </configuration>
            </plugin>
      -->
    </plugins>
  </build>
</project>
